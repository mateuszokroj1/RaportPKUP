name: Pull Request CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:  

jobs:
  build:
    name: Build on MS Windows

    runs-on: windows-latest

    env:
      VCPKG_ROOT: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\vcpkg"
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
    - uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0
        lfs: true

    - name: Configure preinstalled vcpkg to use repo cache
      uses: actions/github-script@v7.0.1
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Cache
      uses: actions/cache@v4.1.2
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/out/build
        # An explicit key for restoring and saving the cache
        key: build-cache

    - name: Install Qt 6
      # You may pin to the exact commit or the version.
      # uses: jurplel/install-qt-action@b3ea5275e37b734d027040e2c7fe7a10ea2ef946
      uses: jurplel/install-qt-action@v4
      with:
        # Version of Qt to install
        version: 6.8.*
        # Specify which Qt archive to install
        archives: qtbase qtdeclarative
        # Whether or not to cache Qt automatically
        cache: true

    - name: Configure CMake
      shell: pwsh
      run: |
        &"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
        cmake --preset "release" -DDISABLE_PRECOMMIT=true

    - name: Build all
      shell: pwsh
      run: cmake --build out/build

    - name: Test
      shell: pwsh
      working-directory: out/build
      run: ctest .
      timeout-minutes: 1

    - name: Install artifacts
      shell: pwsh
      run: cmake --install out/build

    - name: Set ref name
      if: github.event_name != 'pull_request'
      shell: sh
      run: echo "branch=$(echo ${GITHUB_REF//\//_})" >> $GITHUB_OUTPUT
      id: ref_name

    - name: Upload a Build Artifact
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4.4.3
      with:
        # Artifact name
        name: Build on Windows - ${{ steps.ref_name.outputs.branch }} - ${{ github.sha }}
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          out/install/generic/*
          out/install/iconengines/*
          out/install/imageformats/*
          out/install/miktex/*
          out/install/networkinformation/*
          out/install/platforms/*
          out/install/qml/*
          out/install/qmltooling/*
          out/install/tls/*
          out/install/translations/*
          out/install/*.dll
          out/install/RaportPKUPGenerator.exe
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: warn
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
        retention-days: 30
